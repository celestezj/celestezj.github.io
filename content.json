{"meta":{"title":"Muggledy's Blog","subtitle":"","description":"","author":"muggledy","url":"http://example.com","root":"/"},"pages":[{"title":"","date":"2021-02-07T01:52:38.360Z","updated":"2021-02-07T01:49:44.366Z","comments":true,"path":"404.html","permalink":"http://example.com/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"所有分类","date":"2021-02-07T01:06:57.317Z","updated":"2021-02-07T01:06:57.317Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2021-02-07T01:07:09.649Z","updated":"2021-02-07T01:07:09.649Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2021-02-06T17:47:56.310Z","updated":"2021-02-06T17:47:56.310Z","comments":true,"path":"2021/02/07/hello-world/","link":"","permalink":"http://example.com/2021/02/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Hexo博客配置","slug":"配置博客","date":"2021-02-06T10:55:24.144Z","updated":"2021-02-07T01:44:38.211Z","comments":true,"path":"2021/02/06/配置博客/","link":"","permalink":"http://example.com/2021/02/06/%E9%85%8D%E7%BD%AE%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"环境初始化以Windows环境为例 安装git 安装nodejs（通过nvm安装） 安装nvm 下载nvm-noinstall.zip并解压，设路径为path/nvm/，以管理员身份运行其中的install.cmd，编辑生成的path/nvm/settings.txt文件： 123456root: path&#x2F;nvmpath: path&#x2F;nodejs #不存在该目录，但不用管arch: 64proxy: nonenode_mirror: http:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;node&#x2F;npm_mirror: https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;npm&#x2F; 此时系统环境变量会新增两项：NVM_HOME和NVM_SYMLINK，修改NVM_HOME值为path/nvm，NVM_SYMLINK值为path/nodejs，并添加到PATH变量中：%NVM_HOME%;%NVM_SYMLINK%; 打开cmd命令窗口，输入nvm v查看配置是否正确 在命令窗口中输入nvm install latest安装最新的nodejs版本（包括局部npm），随后通过nvm use 版本号选择要使用的版本（可以通过nvm ls查看当前安装的所有nodejs版本） 安装全局npm（可选） 首先执行npm config set prefix &quot;/path/nvm/npm&quot;配置npm的全局安装路径，会生成一个.npmrc文件（默认在C盘用户文件夹下），其中的内容就是path/nvm/npm，然后执行npm install npm -g安装全局npm，注意这个-g参数。在系统中新建环境变量NPM_HOME，值为path/nvm/npm，并将%NPM_HOME%添加到PATH变量中（注意要放在%NVM_SYMLINK%前面），执行npm -v查看配置是否正确 安装cnpm（可选） 配置国内镜像以加速，执行npm install -g cnpm --registry=http://r.cnpmjs.org命令安装，之后就可以用cnpm install 包名来代替npm install 包名了 安装Hexo 执行命令cnpm install -g hexo-cli 建站 创建个人博客文件夹，设路径为path/myblog/，初始化博客文件夹： 12cd /path/myblog/ #之后的所有命令都要先cd进入博客根目录，不再赘述hexo init 初始化后得到一个package.json文件（描述了项目所依赖的包），然后再执行cnpm install安装相关依赖 生成静态网页，并在本地发布 12hexo generatehexo server 最后通过地址”http://localhost:4000“即可访问 基本配置选择某个现成的主题，一般下载后放到博客根目录下的主题文件夹中，即myblog/themes/，Hexo将会根据主题来生成静态页面。本次选用Melody主题，一步一步根据说明文档进行相关配置，另外稍有不同的是，该主题可以直接通过cnpm install --save hexo-theme-melody命令安装（放在myblog/node_modules/目录下） LaTex支持 说明文档有所遗漏，再细说一下，先安装Kramed，同时卸载掉默认的渲染引擎marked： 12cnpm uninstall hexo-renderer-marked --savecnpm install hexo-renderer-kramed --save 再修改melody.yml主题配置文件： 123mathjax: enable: true cdn: https://cdn.bootcss.com/mathjax/2.7.2/MathJax.js?config=TeX-AMS-MML_HTMLorMML 由于LaTeX与markdown语法存在语义冲突，所以还需要对默认的转义规则进行修改，修改myblog/node_modules/kramed/lib/rules/inline.js中的两处内容： 12escape: /^\\\\([`*\\[\\]()# +\\-.!_&gt;])/, //替换：escape: /^\\\\([\\\\`*&#123;&#125;\\[\\]()#$+\\-.!_&gt;])/,em: /^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/, //替换：em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/, 注意，由于node_modules文件夹不会被git跟踪（该项位于.gitignore中），因此在博客迁移后需要重新配置（所以应尽量避免修改node_modules文件夹中的内容以减少麻烦） 部署到GitHub Page 在GitHub上新建仓库，命名为：用户名.github.io，再修改_config.yml文件： 1234deploy: type: git repo: git@github.com:用户名/用户名.github.io branch: master 注意，如果本地添加了多个GitHub账号的密钥，应根据~/.ssh/config文件修改上述repo地址为：Host:用户名/用户名.github.io，最后执行部署： 123hexo cleanhexo ghexo d //和上一条命令可以合并为：hexo g -d，如果报错：ERROR Deployer not found: git，先执行：cnpm install hexo-deployer-git --save 部署成功后，通过地址”https://用户名.github.io“即可访问博客 博客迁移和同步管理 在GitHub（用户名.github.io）上新建env分支（用于存放博客环境文件，即本地的myblog/下的主题和配置文件等，而master主分支自然就是存放Hexo生成的静态站点文件，即myblog/public/），此时里面的内容和主分支是一样的，将env分支单独克隆到本地：git clone -b env git@github.com:用户名/用户名.github.io.git，删除除.git外的所有其它文件，然后执行git add -A、git commit -m &quot;提交说明&quot;，最后推送到远程仓库：git push origin env，这时候，远程env分支被清空 将上一步得到的.git直接拷贝到myblog/根目录下，此时博客文件夹变成和远程env分支关联的本地仓库（如果主题文件是存放于myblog/themes/下，还需删除主题文件夹中的.git和.gitignore文件），以后每次发布新文章或者修改博客配置，依次执行git add -A、git commit -m &quot;提交说明&quot;、git push origin env即可将新的环境文件推送到远程env分支，实现环境的同步管理，最后再执行hexo g -d将新的静态文件推送到远程主分支 现在迁移博客到其他电脑设备是很容易的，首先环境初始化（安装git、nodejs和Hexo），然后克隆远程env至本地：git clone -b env git@github.com:用户名/用户名.github.io.git，再根据packge.json安装依赖，最后hexo g、hexo s就能在本地重新打开博客了 Algolia搜索 首先注册Algolia账户，新建index，并获取Application ID、Search-Only API Key、Admin API Key，然后执行cnpm install --save hexo-algolia，并配置_config.yml： 1234algolia: applicationID: &#x27;application id&#x27; apiKey: &#x27;search-only api Key&#x27; indexName: &#x27;index name&#x27; 再配置melody.yml： 12345678algolia_search: enable: true # or false hits: per_page: 10 # the number of search results per page labels: input_placeholder: Search for Posts hits_empty: &quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot; # if there are no result hits_stats: &quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot; 最后执行hexo algolia生成索引文件并上传到Algolia服务器，出错：ERROR [hexo-algolia] Please set an HEXO_ALGOLIA_INDEXING_KEY environment variable to enable content indexing. ERROR &gt;&gt; Read https://npmjs.com/hexo-algolia#api-key for more informations，根据提示，直接在当前cmd中创建该环境变量（重启窗口会失效，建议“此电脑右键-属性-高级系统设置-环境变量”，博客迁移后注意要重新配置）：set HEXO_ALGOLIA_INDEXING_KEY=admin api key，重新执行hexo algolia，成功","categories":[{"name":"环境配置","slug":"环境配置","permalink":"http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/tags/Hexo/"}]},{"title":"多项式曲线拟合","slug":"多项式曲线拟合","date":"2020-02-22T16:00:00.000Z","updated":"2021-02-07T01:42:08.633Z","comments":true,"path":"2020/02/23/多项式曲线拟合/","link":"","permalink":"http://example.com/2020/02/23/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%9B%B2%E7%BA%BF%E6%8B%9F%E5%90%88/","excerpt":"","text":"原理设多项式函数$f(x)=a_0+a_1x+a_2x^2+…+a_kx^k$，有$n$个数据点$(x_0,y_0),(x_1,y_1),…,(x_{n-1},y_{n-1})$，使用最小二乘法进行函数拟合，得到误差$e=\\sum\\limits_{i=0}^{n-1}[f(x_i)-y_i]^2=\\sum\\limits_{i=0}^{n-1}[(a_0+a_1x_i+a_2x_i^2+…+a_kx_i^k)-y_i]^2$ 求对$a_0,a_1,…,a_k$的偏导数，并令其为0，此时误差最小： $\\frac{\\partial e}{\\partial a_0}=2\\sum\\limits_{i=0}^{n-1}[(a_0+a_1x_i+a_2x_i^2+…+a_kx_i^k)-y_i]1=0$ $\\frac{\\partial e}{\\partial a_1}=2\\sum\\limits_{i=0}^{n-1}[(a_0+a_1x_i+a_2x_i^2+…+a_kx_i^k)-y_i]x_i=0$ $\\frac{\\partial e}{\\partial a_2}=2\\sum\\limits_{i=0}^{n-1}[(a_0+a_1x_i+a_2x_i^2+…+a_kx_i^k)-y_i]x_i^2=0$ $\\dots$ $\\frac{\\partial e}{\\partial a_k}=2\\sum\\limits_{i=0}^{n-1}[(a_0+a_1x_i+a_2x_i^2+…+a_kx_i^k)-y_i]x_i^k=0$ 各式展开得到： $\\sum\\limits_{i=0}^{n-1}a_0x_i^0+\\sum\\limits_{i=0}^{n-1}a_1x_i^1+…+\\sum\\limits_{i=0}^{n-1}a_kx_i^k=\\sum\\limits_{i=0}^{n-1}y_ix_i^0$ $\\sum\\limits_{i=0}^{n-1}a_0x_i^1+\\sum\\limits_{i=0}^{n-1}a_1x_i^2+…+\\sum\\limits_{i=0}^{n-1}a_kx_i^{k+1}=\\sum\\limits_{i=0}^{n-1}y_ix_i^1$ $\\sum\\limits_{i=0}^{n-1}a_0x_i^2+\\sum\\limits_{i=0}^{n-1}a_1x_i^3+…+\\sum\\limits_{i=0}^{n-1}a_kx_i^{k+2}=\\sum\\limits_{i=0}^{n-1}y_ix_i^2$ $\\dots$ $\\sum\\limits_{i=0}^{n-1}a_0x_i^k+\\sum\\limits_{i=0}^{n-1}a_1x_i^{k+1}+…+\\sum\\limits_{i=0}^{n-1}a_kx_i^{k+k}=\\sum\\limits_{i=0}^{n-1}y_ix_i^k$ 写成矩阵相乘的形式： $\\begin{bmatrix}\\sum\\limits_{i=0}^{n-1}x_i^0 &amp; \\sum\\limits_{i=0}^{n-1}x_i^1 &amp; \\cdots &amp; \\sum\\limits_{i=0}^{n-1}x_i^k \\\\ \\sum\\limits_{i=0}^{n-1}x_i^1 &amp; \\sum\\limits_{i=0}^{n-1}x_i^2 &amp; \\cdots &amp; \\sum\\limits_{i=0}^{n-1}x_i^{k+1} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ \\sum\\limits_{i=0}^{n-1}x_i^k &amp; \\sum\\limits_{i=0}^{n-1}x_i^{k+1} &amp; \\cdots &amp; \\sum\\limits_{i=0}^{n-1}x_i^{k+k}\\end{bmatrix}\\times\\begin{bmatrix}a_0 \\\\ a_1 \\\\ \\vdots \\\\ a_k\\end{bmatrix}=\\begin{bmatrix}\\sum\\limits_{i=0}^{n-1}y_ix_i^0 \\\\ \\sum\\limits_{i=0}^{n-1}y_ix_i^1 \\\\ \\vdots \\\\ \\sum\\limits_{i=0}^{n-1}y_ix_i^k\\end{bmatrix}$ 解此非齐次方程组即可得到$a_0,a_1,…,a_k$的值 显然上式矩阵中每一项都可以表示为向量内积，最终分解为：$X^TXA=X^TY$，其中$X=\\begin{bmatrix}x_0^0 &amp; x_0^1 &amp; x_0^2 &amp; \\cdots &amp; x_0^k \\\\ x_1^0 &amp; x_1^1 &amp; x_1^2 &amp; \\cdots &amp; x_1^k \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ x_{n-1}^0 &amp; x_{n-1}^1 &amp; x_{n-1}^2 &amp; \\cdots &amp; x_{n-1}^k\\end{bmatrix}$，$Y=\\begin{bmatrix}y_0 \\\\ y_1 \\\\ \\vdots \\\\ y_{n-1}\\end{bmatrix}$，$A=\\begin{bmatrix}a_0 \\\\ a_1 \\\\ \\vdots \\\\ a_k\\end{bmatrix}$ 所以$A=(X^TX)^{-1}X^TY$ 实验123456789101112131415161718def fit_poly(x,y,k=2): n=len(x) if n!=len(y): raise ValueError(&quot;x&#x27;s length must be equal to y&#x27;s length!&quot;) X=np.zeros((n,k+1)) X[:,0]=1 X[:,1]=np.array(x) for i in range(2,k+1): X[:,i]=np.power(x,i) Y=np.array(y)[:,None] A=(linalg.inv(X.T.dot(X))).dot(X.T).dot(Y).flatten() expr=&#x27;y=&#x27;+&#x27;+&#x27;.join([&#x27;*&#x27;.join([&#x27;(&#x27;+str(A[i])+&#x27;)&#x27;]+[&#x27;x&#x27; for j in range(i)]) for i in range(k+1)]) def poly(x): x=np.array(x) d=&#123;&#x27;x&#x27;:x&#125; exec(expr,globals(),d) return d.get(&#x27;y&#x27;) return poly,A 完整代码","categories":[{"name":"mathematics","slug":"mathematics","permalink":"http://example.com/categories/mathematics/"}],"tags":[]}],"categories":[{"name":"环境配置","slug":"环境配置","permalink":"http://example.com/categories/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"},{"name":"mathematics","slug":"mathematics","permalink":"http://example.com/categories/mathematics/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/tags/Hexo/"}]}